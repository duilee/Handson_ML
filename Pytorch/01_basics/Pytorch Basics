{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Pytorch Basics","provenance":[],"authorship_tag":"ABX9TyOiZKsYLx+BN9ppugQ2pT5R"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"aa85e5d7a83942e498eac0c69b697801":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_e761e328f98746dd96a224eec7438122","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_41955c680b7c43208f6ce6050e0d86c5","IPY_MODEL_b2cfc018f92e4ea59f5c5721e3deccd2"]}},"e761e328f98746dd96a224eec7438122":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"41955c680b7c43208f6ce6050e0d86c5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_bcde68eb5cf840648ca2f0fdf024420f","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":170498071,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":170498071,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_93ced144269449339a5ffea1b9761b7e"}},"b2cfc018f92e4ea59f5c5721e3deccd2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_73911188c2a54d69bbe3d2f2309c6a3e","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 170499072/? [02:33&lt;00:00, 1112600.31it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_a5a6ec3afd8c477eba2207df0aa52364"}},"bcde68eb5cf840648ca2f0fdf024420f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"93ced144269449339a5ffea1b9761b7e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"73911188c2a54d69bbe3d2f2309c6a3e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"a5a6ec3afd8c477eba2207df0aa52364":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ac7cd7e69f3743df9dcad943cfae0a52":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_efe5b5d455254f80a43acd64fad6715e","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_89949e67ce274d0180c4f654dc46c2fe","IPY_MODEL_fb7fd8d99e4a48a4bcf2b1d8462375ea"]}},"efe5b5d455254f80a43acd64fad6715e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"89949e67ce274d0180c4f654dc46c2fe":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_aa4ecf54fd3742ca99b8d304c9e88ce7","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":46827520,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":46827520,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b8f835ab14774269a5bbd5cfce6478dc"}},"fb7fd8d99e4a48a4bcf2b1d8462375ea":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_ec534a2cb9ce4c48a04976516dcedb16","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 44.7M/44.7M [00:06&lt;00:00, 7.28MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_6cbb143438af415788192110e8a6cc18"}},"aa4ecf54fd3742ca99b8d304c9e88ce7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"b8f835ab14774269a5bbd5cfce6478dc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ec534a2cb9ce4c48a04976516dcedb16":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"6cbb143438af415788192110e8a6cc18":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"lFtwjAaCALJI"},"source":["# Pytorch Basics"]},{"cell_type":"code","metadata":{"id":"2lxEBICrBt41","executionInfo":{"status":"ok","timestamp":1617810668424,"user_tz":-540,"elapsed":752,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}}},"source":["import torch\n","import torchvision\n","import torch.nn as nn\n","import numpy as np\n","import torchvision.transforms as transforms"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"h7IWyC47BDDv"},"source":["### Basic autograd example 1"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"82PPfrLD_vek","executionInfo":{"status":"ok","timestamp":1617810670994,"user_tz":-540,"elapsed":1602,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}},"outputId":"911a608e-91f7-4b3e-b9a3-eaba53e37603"},"source":["# create tensors\n","x = torch.tensor(1., requires_grad=True)\n","w = torch.tensor(2., requires_grad=True)\n","b = torch.tensor(3., requires_grad=True)\n","\n","# build computational graph\n","y = w * x + b\n","\n","# compute gradients\n","y.backward()\n","\n","# print out the gradients\n","print(x.grad)\n","print(w.grad)\n","print(b.grad)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["tensor(2.)\n","tensor(1.)\n","tensor(1.)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"6_fhyeQcCJeH"},"source":["### Basic autograd example 2"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J5zBlCPBBp8N","executionInfo":{"status":"ok","timestamp":1617810800372,"user_tz":-540,"elapsed":1673,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}},"outputId":"4ca5854f-a07a-46eb-fc32-bbc42139b612"},"source":["# create tensors of shape (10, 3) and (10, 2)\n","x = torch.randn(10, 3)\n","y = torch.randn(10, 2)\n","\n","# bulid a fully connected layer\n","linear = nn.Linear(3, 2)\n","print(\"w:\", linear.weight)\n","print(\"b:\", linear.bias)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["w: Parameter containing:\n","tensor([[-0.5001,  0.4295, -0.2755],\n","        [ 0.2553,  0.4466, -0.1246]], requires_grad=True)\n","b: Parameter containing:\n","tensor([-0.1649,  0.4973], requires_grad=True)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sh3V3rnqCbgg","executionInfo":{"status":"ok","timestamp":1617810968747,"user_tz":-540,"elapsed":1141,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}},"outputId":"da4e11d5-5b05-47e0-c941-fce08afed18a"},"source":["# build loss function and optimizer\n","criterion = nn.MSELoss()\n","optimizer = torch.optim.SGD(linear.parameters(), lr=0.01)\n","\n","# forward pass\n","pred = linear(x)\n","\n","# compute loss\n","loss = criterion(pred, y)\n","print(\"loss \", loss.item())"],"execution_count":5,"outputs":[{"output_type":"stream","text":["loss  0.6573954224586487\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O3yPpFKgDElv","executionInfo":{"status":"ok","timestamp":1617811039698,"user_tz":-540,"elapsed":1073,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}},"outputId":"bc71995f-4e9a-4c46-b22d-85a4c1843052"},"source":["# backward pass\n","loss.backward()\n","\n","# print out the gradients\n","print(\"dL/dw: \", linear.weight.grad)\n","print(\"dL/db: \", linear.bias.grad)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["dL/dw:  tensor([[-0.0106, -0.0426, -0.1510],\n","        [ 0.0352,  0.6837, -0.2607]])\n","dL/db:  tensor([-0.0388,  0.3035])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i3PhmyMmDV8_","executionInfo":{"status":"ok","timestamp":1617811178637,"user_tz":-540,"elapsed":796,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}},"outputId":"33774efc-6049-48eb-e493-cf4fd985bec1"},"source":["# 1-step gradient descent\n","optimizer.step()\n","\n","# can also perform gradient descent at the low level\n","# linear.weight.data.sub_(0.01 * linear.weight.grad.data)\n","# linear.bias.data.sub_(0.01 * linear.bias.grad.data)\n","\n","# print out the loss after 1 step gradient descent\n","pred = linear(x)\n","loss = criterion(pred, y)\n","print('loss after 1 step optimization: ', loss.item())"],"execution_count":7,"outputs":[{"output_type":"stream","text":["loss after 1 step optimization:  0.6508762836456299\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Qw7_7ZvREC7j"},"source":["### Loading data from numpy"]},{"cell_type":"code","metadata":{"id":"F5KKeY4HD35Q","executionInfo":{"status":"ok","timestamp":1617811327731,"user_tz":-540,"elapsed":739,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}}},"source":["# create a numpy array\n","x = np.array([[1, 2], [3, 4]])\n","\n","# convert the numpy array to a torch tensor\n","y = torch.from_numpy(x)\n","\n","# convert the torch tensor to a numpy array\n","z = y.numpy()"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"2eE4-yCwEdaC"},"source":["### Input pipeline"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":134,"referenced_widgets":["aa85e5d7a83942e498eac0c69b697801","e761e328f98746dd96a224eec7438122","41955c680b7c43208f6ce6050e0d86c5","b2cfc018f92e4ea59f5c5721e3deccd2","bcde68eb5cf840648ca2f0fdf024420f","93ced144269449339a5ffea1b9761b7e","73911188c2a54d69bbe3d2f2309c6a3e","a5a6ec3afd8c477eba2207df0aa52364"]},"id":"9WsYEIN-EcfH","executionInfo":{"status":"ok","timestamp":1617811531369,"user_tz":-540,"elapsed":16174,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}},"outputId":"1b7dcb7d-04a4-4d62-cc4d-54856ca4e153"},"source":["# download and construct CIFAR-10 dataset\n","train_dataset = torchvision.datasets.CIFAR10(root='../../data/', train=True,\n","                                             transform=transforms.ToTensor(),\n","                                             download=True)\n","\n","# Fetch one data pair (read data from disk)\n","image, label = train_dataset[0]\n","print(image.size())\n","print(label)"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ../../data/cifar-10-python.tar.gz\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"aa85e5d7a83942e498eac0c69b697801","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=170498071.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","Extracting ../../data/cifar-10-python.tar.gz to ../../data/\n","torch.Size([3, 32, 32])\n","6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"32b9MAvSFKXD","executionInfo":{"status":"ok","timestamp":1617811840796,"user_tz":-540,"elapsed":6252,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}}},"source":["# data loader (provides queues and threads in a very simple way)\n","train_loader = torch.utils.data.DataLoader(dataset=train_dataset,\n","                                           batch_size=64,\n","                                           shuffle=True)\n","\n","# when iteration starts, queue and thread start to load data from files\n","data_iter = iter(train_loader)\n","\n","# Mini-batch images and labels\n","images, labels = data_iter.next()\n","\n","# actual usage of the data loader is as below\n","for images, labels in train_loader:\n","    # training code here\n","    pass"],"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eQSMye7XGxRO"},"source":["### Input pipeline for custom dataset"]},{"cell_type":"code","metadata":{"id":"sOfxYrb3GYWi","executionInfo":{"status":"ok","timestamp":1617812643277,"user_tz":-540,"elapsed":1471,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}}},"source":["# building custom dataset \n","class CustomDataset(torch.utils.data.Dataset):\n","  def __init__(self):\n","      # TODO\n","      # 1. initialize file paths or a list of file names\n","      pass\n","  def __getitem__(self, index):\n","      # TODO\n","      # 1. read one data from file (e.g. using numpy.fromfile, PIL.Image.open)\n","      # 2. preprocess the data (e.g. torchvision.Transform)\n","      # 3. return a data pair (e.g. image and label)\n","      pass\n","  def __len__(self):\n","      # return the total size of the dataset\n","      return 999\n","\n","# then use the prebuild data loader\n","custom_dataset = CustomDataset()\n","train_loader = torch.utils.data.DataLoader(dataset=custom_dataset,\n","                                           batch_size=64,\n","                                           shuffle=True)\n","\n"],"execution_count":12,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ha9EkYOcJgdD"},"source":["### Pretrained model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":120,"referenced_widgets":["ac7cd7e69f3743df9dcad943cfae0a52","efe5b5d455254f80a43acd64fad6715e","89949e67ce274d0180c4f654dc46c2fe","fb7fd8d99e4a48a4bcf2b1d8462375ea","aa4ecf54fd3742ca99b8d304c9e88ce7","b8f835ab14774269a5bbd5cfce6478dc","ec534a2cb9ce4c48a04976516dcedb16","6cbb143438af415788192110e8a6cc18"]},"id":"OkjU5oxjJZh7","executionInfo":{"status":"ok","timestamp":1617812857281,"user_tz":-540,"elapsed":7890,"user":{"displayName":"Dui Lee","photoUrl":"","userId":"02057638552230258921"}},"outputId":"3f062c8a-874b-48c4-d24c-206bd57b4d6b"},"source":["# download and load the pretrained ResNet-18\n","resnet = torchvision.models.resnet18(pretrained=True)\n","\n","# to fine tune only the top later, set as below\n","for param in resnet.parameters():\n","    param.requires_grad = False\n","  \n","# replace the top layer for fine tuning\n","resnet.fc = nn.Linear(resnet.fc.in_features, 100) # 100 is examplary\n","\n","# Forward pass\n","images = torch.rand(64, 3, 224 , 224)\n","outputs = resnet(images)\n","print(outputs.size())"],"execution_count":13,"outputs":[{"output_type":"stream","text":["Downloading: \"https://download.pytorch.org/models/resnet18-5c106cde.pth\" to /root/.cache/torch/hub/checkpoints/resnet18-5c106cde.pth\n"],"name":"stderr"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ac7cd7e69f3743df9dcad943cfae0a52","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=46827520.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","torch.Size([64, 100])\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7NhKhOYIKcpW"},"source":["### Save and Load the model"]},{"cell_type":"code","metadata":{"id":"zP-wDgS4KQG7"},"source":["# save and load the entire model\n","torch.save(resnet, \"model.ckpt\")\n","model = torch.load(\"model.ckpt\")\n","\n","# save and load only the model parameters (recommended)\n","torch.save(resnet.state_dict(), 'params.ckpt')\n","resnet.load_state_dict(torch.load('params.ckpt'))"],"execution_count":null,"outputs":[]}]}